#!/bin/bash

# Function to create a certificate using certbot and configure HAproxy for SSL termination
function configure_haproxy_ssl_termination() {
    # Install HAproxy if not already installed
    if ! command -v haproxy &> /dev/null; then
        echo "HAproxy is not installed. Installing HAproxy..."
        sudo apt-get update
        sudo apt-get install -y haproxy
    fi

    # Check HAproxy version
    haproxy_version=$(haproxy -v | grep -oP "(?<=HA-Proxy version )\d+\.\d+")
    if (( $(echo "$haproxy_version < 1.5" | bc -l) )); then
        echo "HAproxy version $haproxy_version does not support SSL termination. Please install HAproxy version 1.5 or higher."
        exit 1
    fi

    # Install certbot if not already installed
    if ! command -v certbot &> /dev/null; then
        echo "Certbot is not installed. Installing Certbot..."
        sudo apt-get update
        sudo apt-get install -y certbot
    fi

    # Generate SSL certificate using certbot
    echo "Generating SSL certificate using certbot..."
    sudo certbot certonly --standalone -d www.example.com

    # Configure HAproxy for SSL termination
    echo "Configuring HAproxy for SSL termination..."
    sudo cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.backup
    sudo tee /etc/haproxy/haproxy.cfg > /dev/null << EOT
global
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend www-https
    bind *:443 ssl crt /etc/letsencrypt/live/www.example.com/fullchain.pem
    reqadd X-Forwarded-Proto:\ https
    default_backend www-backend

backend www-backend
    server web-server 127.0.0.1:80 check

EOT
